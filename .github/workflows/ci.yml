name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency: ci-${{ github.ref }}

jobs:
  checks:
    strategy:
      matrix:
        check:
          - compile
          - lint:ci
          - prettier:ci
    name: ${{ matrix.check }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Run ${{ matrix.check }}
        run: npm run ${{ matrix.check }}

  build:
    needs: checks
    if: startsWith(github.repository, 'vlad-yakovlev/') && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            latest
            ${{ github.sha }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build
    if: startsWith(github.repository, 'vlad-yakovlev/') && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Digital Ocean droplet
        uses: appleboy/ssh-action@master
        env:
          SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          envs: SHA
          script_stop: true
          script: |
            cd Projects/expense
            git fetch --prune --prune-tags --verbose
            git checkout $SHA
            docker compose up -d
