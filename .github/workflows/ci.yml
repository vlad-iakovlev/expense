name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency: ci-${{ github.ref }}

jobs:
  checks:
    strategy:
      matrix:
        check:
          - compile
          - lint:ci
          - prettier:ci
    name: ${{ matrix.check }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install dependencies
        run: npm ci
      - name: Run ${{ matrix.check }}
        run: npm run ${{ matrix.check }}

  build:
    needs: checks
    if: startsWith(github.repository, 'vlad-iakovlev/') && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            latest
            ${{ github.sha }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          provenance: false
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # deploy:
  #   needs: build
  #   if: startsWith(github.repository, 'vlad-iakovlev/') && github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to Digital Ocean droplet
  #       uses: appleboy/ssh-action@master
  #       env:
  #         SHA: ${{ github.sha }}
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.KEY }}
  #         envs: SHA
  #         script: |
  #           set -e
  #           cd Projects/expense
  #           curl -OL https://raw.githubusercontent.com/vlad-iakovlev/expense/$SHA/docker-compose.yml
  #           docker compose up -d
